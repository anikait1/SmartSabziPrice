[{"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\index.js":"1","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\App.js":"2","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\Header.jsx":"3","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\PricePostDetail.jsx":"4","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\Main.jsx":"5","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\Profile.jsx":"6","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\ItemDetail.jsx":"7","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\usePosition.js":"8","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\ItemSearch.jsx":"9","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\PricePost.jsx":"10","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\PricePostInput.jsx":"11","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\Loading.jsx":"12","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\Item.jsx":"13","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\AuthScreens\\Register.js":"14","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\AuthScreens\\ForgotPassword.js":"15","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\AuthScreens\\Login.js":"16","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\AuthScreens\\Reset.js":"17","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\AuthScreens\\Activate.js":"18","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\helpers\\auth.js":"19"},{"size":366,"mtime":1609944903699,"results":"20","hashOfConfig":"21"},{"size":1299,"mtime":1610019592043,"results":"22","hashOfConfig":"21"},{"size":3446,"mtime":1610026610218,"results":"23","hashOfConfig":"21"},{"size":4403,"mtime":1609882542148,"results":"24","hashOfConfig":"21"},{"size":2567,"mtime":1609882542146,"results":"25","hashOfConfig":"21"},{"size":4034,"mtime":1609882542150,"results":"26","hashOfConfig":"21"},{"size":3068,"mtime":1609882542143,"results":"27","hashOfConfig":"21"},{"size":776,"mtime":1609882542152,"results":"28","hashOfConfig":"21"},{"size":696,"mtime":1609950470746,"results":"29","hashOfConfig":"21"},{"size":3928,"mtime":1609882542147,"results":"30","hashOfConfig":"21"},{"size":6629,"mtime":1609882542149,"results":"31","hashOfConfig":"21"},{"size":378,"mtime":1609882542145,"results":"32","hashOfConfig":"21"},{"size":1440,"mtime":1609882542142,"results":"33","hashOfConfig":"21"},{"size":5200,"mtime":1609948099483,"results":"34","hashOfConfig":"21"},{"size":3366,"mtime":1609940620782,"results":"35","hashOfConfig":"21"},{"size":4689,"mtime":1609940620781,"results":"36","hashOfConfig":"21"},{"size":4171,"mtime":1609940620781,"results":"37","hashOfConfig":"21"},{"size":3363,"mtime":1609940620782,"results":"38","hashOfConfig":"21"},{"size":2133,"mtime":1609940620782,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"29w1bg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\index.js",[],["85","86"],"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\App.js",[],"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\Header.jsx",["87"],"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\PricePostDetail.jsx",["88"],"import { React, useState, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport PricePost from \"./PricePost\";\r\nimport PricePostInput from \"./PricePostInput\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport ExploreOutlinedIcon from \"@material-ui/icons/ExploreOutlined\";\r\nimport ItemDetail from \"./ItemDetail\";\r\nimport usePosition from \"./usePosition\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonAlign: {\r\n    textAlign: \"right\",\r\n\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n\r\n  buttonWidth: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst PricePostDetail = () => {\r\n  const classes = useStyles();\r\n  const [posts, setPosts] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [infoDialog, setInfoDialog] = useState(false);\r\n  const { latitude, longitude, locationError } = usePosition();\r\n\r\n  const handleInfoDialogOpen = () => {\r\n    setInfoDialog(true);\r\n  };\r\n\r\n  const handleInfoDialogClose = () => {\r\n    setInfoDialog(false);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const objectToQueryString = (obj) => {\r\n    return Object.keys(obj)\r\n      .map((key) => `${key}=${obj[key]}`)\r\n      .join(\"&\");\r\n  };\r\n\r\n  const getPosts = () => {\r\n    const _apiHost = \"http://localhost:5000/items\";\r\n    const id = \"5fd991232107f439dd465207\";\r\n    const url = `${_apiHost}/${id}/price-posts?${objectToQueryString({\r\n      latitude,\r\n      longitude,\r\n    })}`;\r\n\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          setPosts(result.data);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (latitude && longitude && !locationError) {\r\n      getPosts();\r\n    } else {\r\n      console.log(locationError);\r\n    }\r\n  }, [latitude, longitude, locationError]);\r\n\r\n  return (\r\n    <Container>\r\n      <PricePostInput display={open} close={handleClose} />\r\n      <ItemDetail open={infoDialog} close={handleInfoDialogClose} />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        alignItems=\"flex-start\"\r\n        className={classes.container}\r\n      >\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Location\"\r\n            id=\"current-location\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            helperText=\"Current location\"\r\n            fullWidth\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <ExploreOutlinedIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} className={classes.buttonAlign}>\r\n          <ButtonGroup\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            aria-label=\"contained primary button group\"\r\n            className={classes.buttonWidth}\r\n          >\r\n            <Button\r\n              startIcon={<CreateIcon />}\r\n              onClick={handleClickOpen}\r\n              className={classes.buttonWidth}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              startIcon={<InfoIcon />}\r\n              onClick={handleInfoDialogOpen}\r\n              className={classes.buttonWidth}\r\n            >\r\n              Info\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n        {posts.map((post, i) => (\r\n          <Grid item xs={12} sm={6} md={4} lg={3} key={i}>\r\n            <PricePost\r\n              bill={post.bill}\r\n              user={post.userID}\r\n              likes={post.likes}\r\n              location={post.location}\r\n              time={post.createdAt}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PricePostDetail;\r\n","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\Main.jsx",["89","90"],"import { React, useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Loading from \"./Loading\";\r\nimport ItemSearch from \"./ItemSearch\";\r\nimport Item from \"./Item\";\r\n\r\nconst _fruits = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\r\nconst _vegetables = [1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginBottom: theme.spacing(3),\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Main = () => {\r\n  const classes = useStyles();\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [fruits, setFruits] = useState([]);\r\n  const [vegetables, setVegetables] = useState([]);\r\n\r\n  const getFruits = () => {\r\n    fetch(\"http://localhost:5000/items/fruits\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          setFruits(result.data);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const getVegetables = () => {\r\n    fetch(\"http://localhost:5000/items/vegetables\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          setVegetables(result.data);\r\n          console.log(result);\r\n          setIsLoaded(true);\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFruits();\r\n    getVegetables();\r\n  }, []);\r\n\r\n  if (!isLoaded) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Grid\r\n        container\r\n        className={classes.container}\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <ItemSearch fruits={fruits} vegetables={vegetables} />\r\n      </Grid>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\" component=\"h5\" align=\"center\">\r\n            Fruits\r\n          </Typography>\r\n        </Grid>\r\n        {fruits.map((i) => (\r\n          <Grid item key={i._id} xs={6} md={4} lg={2}>\r\n            <Item name={i.name} />\r\n          </Grid>\r\n        ))}\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\" component=\"h5\" align=\"center\">\r\n            Vegetables\r\n          </Typography>\r\n        </Grid>\r\n        {vegetables.map((i) => (\r\n          <Grid item key={i._id} xs={6} md={4} lg={2}>\r\n            <Item name={i.name} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\Profile.jsx",["91"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PricePost from \"./PricePost\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginBottom: theme.spacing(3),\r\n    marginTop: theme.spacing(3),\r\n  },\r\n\r\n  large: {\r\n    height: theme.spacing(8),\r\n    width: theme.spacing(8),\r\n    fontSize: \"2.5rem\",\r\n  },\r\n\r\n  name: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n\r\n  marginRight: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n\r\n  marginLeft: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Profile = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={4}>\r\n          <Box display=\"flex\" justifyContent=\"center\">\r\n            <Avatar className={classes.large}>H</Avatar>\r\n          </Box>\r\n          <Typography\r\n            variant=\"h5\"\r\n            component=\"h4\"\r\n            align=\"center\"\r\n            className={classes.name}\r\n          >\r\n            Your Name\r\n          </Typography>\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"subtitle1\"> Account Status</Typography>\r\n            <Chip\r\n              label=\"Account Confirmed\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              icon={<DoneIcon />}\r\n            />\r\n          </Box>\r\n          <Divider className={classes.name} />\r\n          <Box display=\"flex\">\r\n            <TextField\r\n              label=\"First Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              classesName={classes.marginRight}\r\n            />\r\n            <TextField\r\n              label=\"Last Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              className={classes.marginLeft}\r\n            />\r\n          </Box>\r\n          <TextField\r\n            label=\"Email\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n          <Box display=\"flex\">\r\n            <TextField\r\n              label=\"Old Password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              type=\"password\"\r\n              classesName={classes.marginRight}\r\n            />\r\n            <TextField\r\n              label=\"New Password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              margin=\"dense\"\r\n              type=\"password\"\r\n              className={classes.marginLeft}\r\n            />\r\n          </Box>\r\n          <Box textAlign=\"center\" marginTop={2}>\r\n            <Button color=\"primary\" variant=\"contained\">\r\n              Update\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <PricePost />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <PricePost />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <PricePost />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <PricePost />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\ItemDetail.jsx",["92","93"],"import { React, useState, useEffect, forwardRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\n// const Transition = forwardRef(function Transition(props, ref) {\r\n//   return <Slide direction=\"up\" ref={ref} {...props} />;\r\n// });\r\n\r\nconst ItemDetail = (props) => {\r\n  const [description, setDescription] = useState(\"\");\r\n  const [nutrition, setNutrition] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/items/5fd991232107f439dd465207\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setDescription(result.data.description);\r\n        setNutrition(result.data.nutrition);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.close}\r\n        maxWidth=\"xs\"\r\n      >\r\n        <DialogTitle id=\"dialog-title\">Product Description</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {description}\r\n          </DialogContentText>\r\n          <TableContainer component={Paper}>\r\n            <Table className aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Nutrition</TableCell>\r\n                  <TableCell align=\"right\">Value</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {Object.keys(nutrition).map((key) => (\r\n                  <TableRow key={key}>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ textTransform: \"capitalize\" }}\r\n                    >\r\n                      {key}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{nutrition[key]}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={props.close}\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            startIcon={<CloseIcon />}\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemDetail;\r\n","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\usePosition.js",[],"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\ItemSearch.jsx",[],"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\PricePost.jsx",[],"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\PricePostInput.jsx",["94","95","96","97","98"],"import { React, useState, useEffect, forwardRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport LocalMallOutlinedIcon from \"@material-ui/icons/LocalMallOutlined\";\r\nimport ExploreOutlinedIcon from \"@material-ui/icons/ExploreOutlined\";\r\nimport LocalGroceryStoreIcon from \"@material-ui/icons/LocalGroceryStore\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst PricePostInput = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [values, setValues] = useState({\r\n    amount: \"\",\r\n    password: \"\",\r\n    weight: \"\",\r\n    weightRange: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const [price, setPrice] = useState(null);\r\n  const [quantity, setQuantity] = useState(null);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(price);\r\n  });\r\n\r\n  const [currency, setCurrency] = useState(\"EUR\");\r\n\r\n  const currencies = [\r\n    {\r\n      value: \"Kilogram\",\r\n      label: \"Kg\",\r\n    },\r\n    {\r\n      value: \"Gram\",\r\n      label: \"Gm\",\r\n    },\r\n    {\r\n      value: \"Dozen\",\r\n      label: \"Dozen\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.display}\r\n        onClose={props.close}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        TransitionComponent={Transition}\r\n        maxWidth=\"xs\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Post</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Price\"\r\n                id=\"price\"\r\n                type=\"Number\"\r\n                fullWidth\r\n                size=\"small\"\r\n                helperText=\"Enter price\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                value={price}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">&#x20B9;</InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                label=\"Quantity\"\r\n                id=\"quantity\"\r\n                helperText=\"Enter quantity\"\r\n                type=\"Number\"\r\n                fullWidth\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <LocalMallOutlinedIcon fontSize=\"small\" />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                id=\"quantity-category\"\r\n                select\r\n                label=\"Weight\"\r\n                value={currency}\r\n                onChange={handleChange}\r\n                size=\"small\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                helperText=\"Select weight category\"\r\n              >\r\n                {currencies.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Location\"\r\n                id=\"location\"\r\n                helperText=\"Confirm Location\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <ExploreOutlinedIcon size=\"small\" />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                label=\"User\"\r\n                id=\"user\"\r\n                helperText=\"Current user\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                value=\"Anikait\"\r\n                disabled\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <PersonIcon size=\"small\" />\r\n                    </InputAdornment>\r\n                  ),\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                label=\"Item\"\r\n                id=\"item\"\r\n                helperText=\"Selected item\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                value=\"Pineapple\"\r\n                disabled\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <LocalGroceryStoreIcon size=\"small\" />\r\n                    </InputAdornment>\r\n                  ),\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={props.close}\r\n            color=\"secondary\"\r\n            fullWidth\r\n            startIcon={<CloseIcon />}\r\n            variant=\"contained\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={props.close}\r\n            color=\"primary\"\r\n            fullWidth\r\n            startIcon={<DoneIcon />}\r\n            variant=\"contained\"\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PricePostInput;\r\n","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\Loading.jsx",[],"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\Item.jsx",[],"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\AuthScreens\\Register.js",[],"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\AuthScreens\\ForgotPassword.js",[],"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\AuthScreens\\Login.js",[],"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\AuthScreens\\Reset.js",["99"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer,toast } from \"react-toastify\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Foxy Buyer\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst ResetPassword = ({ match }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [formData, setFormData] = useState({\r\n    password1: \"\",\r\n    password2: \"\",\r\n    token: \"\",\r\n  });\r\n  const { password1, password2, token } = formData;\r\n\r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    if (token) {\r\n      setFormData({ ...formData, token });\r\n    }\r\n  }, [match.params]);\r\n  const handleChange = (text) => (e) => {\r\n    setFormData({ ...formData, [text]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    console.log(password1, password2);\r\n    e.preventDefault();\r\n    if (password1 === password2 && password1 && password2) {\r\n      setFormData({ ...formData });\r\n      axios\r\n        .put(`${process.env.REACT_APP_API_URL}/resetpassword`, {\r\n          newPassword: password1,\r\n          resetPasswordLink: token,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data.message);\r\n          setFormData({\r\n            ...formData,\r\n            password1: \"\",\r\n            password2: \"\",\r\n          });\r\n          toast.success(`You can now login with new Password`);\r\n          history.push(\"/login\");\r\n        })\r\n        .catch((err) => {\r\n          toast.error(\"Something is wrong try again\");\r\n        });\r\n    } else {\r\n      toast.error(\"Passwords don't matches\");\r\n    }\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <ToastContainer />\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Reset Your Password\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"New Password\"\r\n            type=\"password\"\r\n            onChange={handleChange(\"password1\")}\r\n            value={password1}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Confirm New Password\"\r\n            type=\"password\"\r\n            onChange={handleChange(\"password2\")}\r\n            value={password2}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\components\\AuthScreens\\Activate.js",[],"F:\\Study Content\\My Work\\SmartSabziPrice\\frontend-v2\\src\\helpers\\auth.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":35,"column":9,"nodeType":"106","messageId":"107","endLine":35,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":92,"column":6,"nodeType":"110","endLine":92,"endColumn":42,"suggestions":"111"},{"ruleId":"104","severity":1,"message":"112","line":10,"column":7,"nodeType":"106","messageId":"107","endLine":10,"endColumn":14},{"ruleId":"104","severity":1,"message":"113","line":11,"column":7,"nodeType":"106","messageId":"107","endLine":11,"endColumn":18},{"ruleId":"104","severity":1,"message":"114","line":11,"column":8,"nodeType":"106","messageId":"107","endLine":11,"endColumn":17},{"ruleId":"104","severity":1,"message":"115","line":1,"column":38,"nodeType":"106","messageId":"107","endLine":1,"endColumn":48},{"ruleId":"104","severity":1,"message":"116","line":15,"column":8,"nodeType":"106","messageId":"107","endLine":15,"endColumn":13},{"ruleId":"104","severity":1,"message":"117","line":24,"column":10,"nodeType":"106","messageId":"107","endLine":24,"endColumn":14},{"ruleId":"104","severity":1,"message":"118","line":38,"column":10,"nodeType":"106","messageId":"107","endLine":38,"endColumn":18},{"ruleId":"104","severity":1,"message":"119","line":38,"column":20,"nodeType":"106","messageId":"107","endLine":38,"endColumn":31},{"ruleId":"104","severity":1,"message":"120","line":40,"column":9,"nodeType":"106","messageId":"107","endLine":40,"endColumn":20},{"ruleId":"104","severity":1,"message":"121","line":48,"column":20,"nodeType":"106","messageId":"107","endLine":48,"endColumn":31},{"ruleId":"108","severity":1,"message":"122","line":65,"column":6,"nodeType":"110","endLine":65,"endColumn":20,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'_fruits' is assigned a value but never used.","'_vegetables' is assigned a value but never used.","'CloseIcon' is defined but never used.","'forwardRef' is defined but never used.","'Slide' is defined but never used.","'open' is assigned a value but never used.","'quantity' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'setCurrency' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [latitude, longitude, locationError, getPosts]",{"range":"132","text":"133"},"Update the dependencies array to be: [formData, match.params]",{"range":"134","text":"135"},[2409,2445],"[latitude, longitude, locationError, getPosts]",[1834,1848],"[formData, match.params]"]